#pragma once
#include <string>
class Exam_string
{
public:

	Exam_string(); // вызов конструктора 
	Exam_string(const Exam_string& other); // конструктор (№1) 
	Exam_string(const char *source); // конструктор (№2) 
	Exam_string(const std::string& source);
	

	~Exam_string(); // вызов деструктора 

	

	char get(int i); // метод для чтения строки 
	int num(); // вывод размера строки 
	char insert(int i, int value); // Метод, вставляющий на заданную позицию 
								   // внутри строки указанную в параметрах последовательность символов(*char) 
	void add(char s); // Метод add(), принимающий строку символов *char, 
					  // либо стандартную строку std∷string и выполняющий 
					  // конкатенацию(сложение имеющейся строки с 
					  // принимаемой) 
	void clear(); // очищение строки 
	void print(); // вывод строки 
	char cut(int i, int number); // метод, удаляющий с заданной позиции заданное в параметрах количество символов 

private:

	int a; // используемая длина строки 
	int max; // полный размер строки (использумый + пустота) 
	char *st; // строка (передана как динамический массив) 
	char *new_st; // обновленная строка строка (передана как динамический массив) 
	void grow(); // метод увеличения размера (длины) строки 
	

};

